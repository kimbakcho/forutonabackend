<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wing.forutona.FcubeDao.FcubeExtend1Mapper">
  <resultMap id="BaseResultMap" type="com.wing.forutona.FcubeDto.FcubeExtender1">
    <id column="Cubeuuid" jdbcType="VARCHAR" property="cubeuuid" />
    <result column="Uid" jdbcType="VARCHAR" property="uid" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="CubeName" jdbcType="VARCHAR" property="cubename" />
    <result column="CubeType" jdbcType="VARCHAR" property="cubetype" />
    <result column="MakeTime" jdbcType="TIMESTAMP" property="maketime" />
    <result column="Influence" jdbcType="DOUBLE" property="influence" />
    <result column="CubeState" jdbcType="INTEGER" property="cubestate" />
    <result column="PlaceAddress" jdbcType="VARCHAR" property="placeaddress" />
    <result column="AdministrativeArea" jdbcType="VARCHAR" property="administrativearea" />
    <result column="Country" jdbcType="VARCHAR" property="country" />
    <result column="HasPassword" jdbcType="INTEGER" property="haspassword" />
    <result column="NickName" jdbcType="VARCHAR" property="nickname" />
    <result column="ProfilePicktureUrl" jdbcType="VARCHAR" property="profilepicktureurl" />
    <result column="ContentType" jdbcType="VARCHAR" property="contenttype" />
    <result column="ContentValue" jdbcType="LONGVARCHAR" property="contentvalue" />
  </resultMap>

  <select id="selectUserBoxAll" parameterType="com.wing.forutona.FcubeDto.Fcube" resultMap="BaseResultMap">
    SELECT A.Cubeuuid, A.Uid, A.longitude, A.latitude, A.CubeName, A.CubeType, A.MakeTime, A.Influence,
    A.CubeState, A.PlaceAddress, A.AdministrativeArea, A.Country, A.PointReward, A.InfluenceReward,A.HasPassword,
    A.ActivationTime, A.CubeScope, A.InfluenceLevel, A.CubeHits, A.CubeLikes, A.CubeDisLikes,A.JoinPlayer,
    A.MaximumPlayers,B.NickName,B.ProfilePicktureUrl FROM Fcube A LEFT JOIN UserInfo B ON A.Uid = B.Uid
    <where>
      A.Uid = #{uid}
    </where>
  </select>
  <update id="updateCubeState" parameterType="com.wing.forutona.FcubeDto.Fcube">
    UPDATE Fcube SET CubeState = #{cubestate,jdbcType=INTEGER},ActivationTime = #{activationtime,jdbcType=TIMESTAMP}
    where Cubeuuid =  #{cubeuuid,jdbcType=VARCHAR}
  </update>
  <select id="findNearDistanceCube" parameterType="com.wing.forutona.FcubeDto.FCubeGeoSearchUtil" resultMap="BaseResultMap">
     SELECT A.Cubeuuid, A.Uid, A.longitude, A.latitude, A.CubeName, A.CubeType, A.MakeTime, A.Influence,
    A.CubeState, A.PlaceAddress, A.AdministrativeArea, A.Country, A.PointReward, A.InfluenceReward,A.HasPassword,
    A.ActivationTime, A.CubeScope, A.InfluenceLevel, A.CubeHits, A.CubeLikes, A.CubeDisLikes,A.JoinPlayer,
    A.MaximumPlayers,B.NickName,B.ProfilePicktureUrl,111.045 * DEGREES(ACOS(COS(RADIANS(#{latitude}))
                 * COS(RADIANS(A.latitude))
                 * COS(RADIANS(#{longitude}) - RADIANS(A.longitude))
                 + SIN(RADIANS(#{latitude}))
                 * SIN(RADIANS(A.latitude)))) AS distancewithme,C.ContentType,C.ContentValue
    FROM Fcube A LEFT JOIN UserInfo B ON A.Uid = B.Uid LEFT JOIN FcubeContent C ON  A.Cubeuuid = C.Cubeuuid
    <where>
      A.latitude
      BETWEEN  #{latitude} - ( #{distance} / 111.045 )
      AND #{latitude} + ( #{distance} / 111.045 )
      AND A.longitude
      BETWEEN #{longitude} - (#{distance} / (111.045 * COS(RADIANS(#{latitude}))))
      AND #{longitude} + (#{distance} / (111.045 * COS(RADIANS(#{latitude}))))
      AND C.ContentType = 'description'
    </where>
    ORDER BY distancewithme
    LIMIT #{limit}
    OFFSET #{offset}
  </select>
</mapper>